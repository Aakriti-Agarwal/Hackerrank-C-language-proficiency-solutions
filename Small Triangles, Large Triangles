#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct triangle
{
	int a;
	int b;
	int c;
};

typedef struct triangle triangle;

double find_area(triangle x)
{
    double p=(x.a + x.b + x.c)/2.0;
    double area=sqrt(p*(p-x.a)*(p-x.b)*(p-x.c));
    return(area);
}
void swap(double *x,double *y)
{
    double temp;
    temp=*x;
    *x=*y;
    *y=temp;
    
}

void swap_struct(triangle *x,triangle *y)
{
    triangle temp;
    temp=*x;
    *x=*y;
    *y=temp;
}


void sort_by_area(triangle* tr, int n)
 {
	/**
	* Sort an array a of the length n
	*/
    double *area = (double*)malloc(n*sizeof(double));
    int i,j;
    for(i=0;i<n;i++)
    {
        area[i]=find_area(tr[i]);
    }
    for(i=0;i<n-1;i++)
    {
        for(j=0;j<n-i-1;j++)
        {
            if(area[j]>area[j+1])
            {
                swap(&area[j],&area[j+1]);
                swap_struct(&tr[j],&tr[j+1]);
            }
        }
    }
   
    
}

int main()
{
	int n;
	scanf("%d", &n);
	triangle *tr = malloc(n * sizeof(triangle));
	for (int i = 0; i < n; i++) {
		scanf("%d%d%d", &tr[i].a, &tr[i].b, &tr[i].c);
	}
	sort_by_area(tr, n);
	for (int i = 0; i < n; i++) {
		printf("%d %d %d\n", tr[i].a, tr[i].b, tr[i].c);
	}
	return 0;
}
